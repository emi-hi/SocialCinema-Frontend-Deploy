{"ast":null,"code":"import _slicedToArray from \"/vagrant/finalProject/cinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/vagrant/finalProject/cinema/social-cinema/src/components/FriendInfo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport default function FriendInfo(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        prefs = _useState2[0],\n        setPrefs = _useState2[1]; // useEffect(() => {\n  //   axios.get(`http://localhost:5000/api/friend${props.friend}/genres`)\n  //   .then(res => {   \n  //     setPrefs(res.data)\n  //   })\n  //   .catch(error => {console.log(error)})\n  // }, [])\n\n\n  let loves = [];\n  let hates = [];\n\n  for (let each in prefs[\"love\"]) {\n    loves.push(\"images/genreicons/\".concat(prefs[\"love\"][each], \".svg\"));\n  }\n\n  for (let each in prefs[\"hate\"]) {\n    hates.push(\"images/genreicons/\".concat(prefs[\"hate\"][each], \".svg\"));\n  }\n\n  return React.createElement(\"main\", {\n    className: \"friend-info-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.friend), loves.length > 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Loves\") : \"\", loves.map(pref => React.createElement(\"img\", {\n    className: \"friend-info-image\",\n    src: pref,\n    alt: pref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), loves.length > 0 && hates.length > 0 ? React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : '', hates.map(pref => React.createElement(\"img\", {\n    className: \"friend-info-image\",\n    src: pref,\n    alt: pref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/vagrant/finalProject/cinema/social-cinema/src/components/FriendInfo.js"],"names":["React","useEffect","useState","axios","FriendInfo","props","prefs","setPrefs","loves","hates","each","push","friend","length","map","pref"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACdH,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QACjCI,KADiC;AAAA,QAC1BC,QAD0B,kBAExC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAIC,KAAK,GAAC,EAAV;AACA,MAAIC,KAAK,GAAC,EAAV;;AACA,OAAK,IAAIC,IAAT,IAAiBJ,KAAK,CAAC,MAAD,CAAtB,EAA+B;AAC7BE,IAAAA,KAAK,CAACG,IAAN,6BAAgCL,KAAK,CAAC,MAAD,CAAL,CAAcI,IAAd,CAAhC;AACD;;AACD,OAAK,IAAIA,IAAT,IAAiBJ,KAAK,CAAC,MAAD,CAAtB,EAA+B;AAC7BG,IAAAA,KAAK,CAACE,IAAN,6BAAgCL,KAAK,CAAC,MAAD,CAAL,CAAcI,IAAd,CAAhC;AACD;;AAGD,SACA;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACO,MAAX,CADF,EAEGJ,KAAK,CAACK,MAAN,GAAa,CAAb,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhB,GAA+B,EAFlC,EAGKL,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEA,IAAxC;AAA8C,IAAA,GAAG,EAAEA,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAHL,EAIGP,KAAK,CAACK,MAAN,GAAa,CAAb,IAAkBJ,KAAK,CAACI,MAAN,GAAa,CAA/B,GAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAA8C,EAJjD,EAKKJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEA,IAAxC;AAA8C,IAAA,GAAG,EAAEA,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CALL,CADA;AASD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport default function FriendInfo(props) {\n  const [prefs, setPrefs] = useState('')\n  // useEffect(() => {\n  //   axios.get(`http://localhost:5000/api/friend${props.friend}/genres`)\n  //   .then(res => {   \n  //     setPrefs(res.data)\n  //   })\n  //   .catch(error => {console.log(error)})\n  // }, [])\n  let loves=[]\n  let hates=[]\n  for (let each in prefs[\"love\"]){\n    loves.push(`images/genreicons/${prefs[\"love\"][each]}.svg`)\n  }\n  for (let each in prefs[\"hate\"]){\n    hates.push(`images/genreicons/${prefs[\"hate\"][each]}.svg`)\n  }\n\n\n  return(\n  <main className=\"friend-info-form\">\n    <h4>{props.friend}</h4>\n    {loves.length>0? <p>Loves</p> : \"\"}\n      {loves.map(pref => <img className=\"friend-info-image\" src={pref} alt={pref}/>)}\n    {loves.length>0 && hates.length>0?  <hr></hr> :'' }\n      {hates.map(pref => <img className=\"friend-info-image\" src={pref} alt={pref}/> )}\n  </main>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}