{"ast":null,"code":"import _defineProperty from \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport List from './lists/List.js';\nimport Nav from './Nav';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Suggested from \"./Suggested\";\nimport Genres from \"./Genres\";\nimport FriendList from './FriendList';\nimport MovieNightFriends from './MovieNightFriends';\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport RecentSuggestion from './RecentSuggestion';\nimport RuntimeSelector from './RuntimeSelector';\n\nfunction App() {\n  const _useApplicationData = useApplicationData(),\n        state = _useApplicationData.state,\n        setUser = _useApplicationData.setUser,\n        setGenres = _useApplicationData.setGenres,\n        setLaterMovies = _useApplicationData.setLaterMovies,\n        removeLaterMovie = _useApplicationData.removeLaterMovie,\n        setFavoriteMovies = _useApplicationData.setFavoriteMovies,\n        removeFavoritedMovie = _useApplicationData.removeFavoritedMovie,\n        setFriends = _useApplicationData.setFriends,\n        setGroup = _useApplicationData.setGroup;\n\n  const user = state.user;\n  const userGenres = state.genres;\n  const friends = state.friends;\n  const group = state.group;\n\n  const _useState = useState(\"hide\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        favList = _useState2[0],\n        setFavList = _useState2[1];\n\n  const _useState3 = useState(\"hide\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        laterList = _useState4[0],\n        setLaterList = _useState4[1];\n\n  const _useState5 = useState(\"hide\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        genreList = _useState6[0],\n        setGenreList = _useState6[1];\n\n  const _useState7 = useState(\"hide\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        friendList = _useState8[0],\n        setFriendList = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        recentSuggestions = _useState10[0],\n        setRecentSuggestions = _useState10[1];\n\n  const _useState11 = useState(30),\n        _useState12 = _slicedToArray(_useState11, 2),\n        minimumRuntime = _useState12[0],\n        setMinimumRuntime = _useState12[1];\n\n  const _useState13 = useState(300),\n        _useState14 = _slicedToArray(_useState13, 2),\n        maximumRuntime = _useState14[0],\n        setMaximumRuntime = _useState14[1];\n\n  const useMovieNight = function (friend, action) {\n    if (action === \"add\") {\n      setGroup([...group, {\n        friend\n      }]);\n    } else if (action === \"remove\") {\n      let newGroup = [];\n\n      for (let each of group) {\n        if (!(friend[\"id\"] === each[\"friend\"][\"id\"])) {\n          newGroup.push(each);\n        }\n      }\n\n      setGroup(newGroup);\n    }\n  };\n\n  const getRecentSuggestions = function (newSuggestion) {\n    let updatedRecentSuggestionsList = [...recentSuggestions];\n    updatedRecentSuggestionsList.unshift({\n      newSuggestion\n    });\n\n    if (updatedRecentSuggestionsList.length > 15) {\n      updatedRecentSuggestionsList = updatedRecentSuggestionsList.slice(0, updatedRecentSuggestionsList.length - 1);\n    }\n\n    setRecentSuggestions(updatedRecentSuggestionsList);\n  };\n\n  const onDragEnd = result => {\n    // TODO : update\n    const destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      if (destination.index === source.index) {\n        return;\n      }\n\n      if (destination.droppableId === \"favorites\") {\n        const new_fav_movies = [...state.favorited_movies];\n\n        const moved_movie = _objectSpread({}, new_fav_movies[source.index]);\n\n        new_fav_movies.splice(source.index, 1);\n        new_fav_movies.splice(destination.index, 0, moved_movie);\n        setFavoriteMovies(new_fav_movies);\n      } else if (destination.droppableId === \"laters\") {\n        const new_later_movies = [...state.later_movies];\n\n        const moved_movie = _objectSpread({}, new_later_movies[source.index]);\n\n        new_later_movies.splice(source.index, 1);\n        new_later_movies.splice(destination.index, 0, moved_movie);\n        setLaterMovies(new_later_movies);\n      }\n    } else if (destination.droppableId === \"laters\" && source.droppableId === \"recent\") {\n      const new_later_movies = [...state.later_movies];\n\n      const sugested_movie = _objectSpread({}, recentSuggestions[destination.index]);\n\n      const moved_movie = {\n        title: sugested_movie.title,\n        img: sugested_movie.poster\n      };\n      new_later_movies.splice(destination.index, 0, moved_movie);\n      console.log(new_later_movies);\n      setLaterMovies(new_later_movies);\n    }\n  };\n\n  const createUser = (name, password) => {\n    return axios.post(\"http://localhost:5000/signup\", {\n      name,\n      password,\n      genres: userGenres\n    }).then(response => {\n      console.log(\"WEE RES!\", response);\n      setUser(response.data.user);\n    });\n  };\n\n  const getUser = (name, password) => {\n    return axios.post(\"http://localhost:5000/login\", {\n      name,\n      password\n    }).then(response => {\n      setUser(response.data.user);\n      setGenres(response.data.genres);\n      setLaterMovies(response.data.later_movies);\n      setFavoriteMovies(response.data.favorited_movies);\n    });\n  };\n\n  const setGenre = (id, value) => {\n    if (state.user && state.user.name !== \"\") {\n      axios.post(\"http://localhost:5000/api/\".concat(state.user.name, \"/genres\"), {\n        id,\n        preference: value\n      }).then(response => {\n        setGenres(response.data.genres);\n      });\n    } else {\n      const genre = state.genres.find(genre => genre.id === id);\n      genre.preference = value;\n      setGenres(state.genres);\n    }\n  };\n\n  const removeUser = () => {\n    setUser(\"\");\n    setGenres([]);\n    setLaterMovies([]);\n    setFavoriteMovies([]);\n    setFriends([]);\n    setGroup([]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    user: user,\n    createUser: createUser,\n    getUser: getUser,\n    removeUser: removeUser,\n    setFavList: setFavList,\n    setLaterList: setLaterList,\n    setGenreList: setGenreList,\n    setFriendList: setFriendList,\n    favList: favList,\n    friendList: friendList,\n    laterList: laterList,\n    genreList: genreList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, favList === \"show\" && React.createElement(List, {\n    type: \"favorites\",\n    data: state.favorited_movies,\n    user: user,\n    setFavoriteMovies: setFavoriteMovies,\n    removeLaterMovie: removeFavoritedMovie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, laterList === \"show\" && React.createElement(List, {\n    type: \"laters\",\n    removeLaterMovie: removeLaterMovie,\n    data: state.later_movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, genreList === \"show\" && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Genres, {\n    userGenres: userGenres,\n    setGenre: setGenre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(RuntimeSelector, {\n    minimumRuntime: minimumRuntime,\n    setMinimumRuntime: setMinimumRuntime,\n    maximumRuntime: maximumRuntime,\n    setMaximumRuntime: setMaximumRuntime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, friendList === \"show\" && React.createElement(FriendList, {\n    friends: friends,\n    useMovieNight: useMovieNight,\n    group: group,\n    action: \"add\",\n    classname: \"list\",\n    type: \"All Friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"friends-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(MovieNightFriends, {\n    group: group,\n    action: \"remove\",\n    classname: \"columnlist\",\n    useMovieNight: useMovieNight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"suggested-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Suggested, {\n    recentSuggestions: recentSuggestions,\n    getRecentSuggestions: getRecentSuggestions,\n    user: user,\n    group: group,\n    userGenres: userGenres,\n    setLaterMovies: setLaterMovies,\n    minimumRuntime: minimumRuntime,\n    maximumRuntime: maximumRuntime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"recent-suggestion-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"RECENTLY SUGGESTED LIST\", React.createElement(RecentSuggestion, {\n    recent: recentSuggestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/App.js"],"names":["React","useState","axios","List","Nav","DragDropContext","Suggested","Genres","FriendList","MovieNightFriends","useApplicationData","RecentSuggestion","RuntimeSelector","App","state","setUser","setGenres","setLaterMovies","removeLaterMovie","setFavoriteMovies","removeFavoritedMovie","setFriends","setGroup","user","userGenres","genres","friends","group","favList","setFavList","laterList","setLaterList","genreList","setGenreList","friendList","setFriendList","recentSuggestions","setRecentSuggestions","minimumRuntime","setMinimumRuntime","maximumRuntime","setMaximumRuntime","useMovieNight","friend","action","newGroup","each","push","getRecentSuggestions","newSuggestion","updatedRecentSuggestionsList","unshift","length","slice","onDragEnd","result","destination","source","draggableId","droppableId","index","new_fav_movies","favorited_movies","moved_movie","splice","new_later_movies","later_movies","sugested_movie","title","img","poster","console","log","createUser","name","password","post","then","response","data","getUser","setGenre","id","value","preference","genre","find","removeUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport List from './lists/List.js'\nimport Nav from './Nav'\nimport { DragDropContext } from 'react-beautiful-dnd'\n\n\nimport Suggested from \"./Suggested\";\nimport Genres from \"./Genres\";\nimport FriendList from './FriendList';\nimport MovieNightFriends from './MovieNightFriends';\n\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport RecentSuggestion from './RecentSuggestion';\nimport RuntimeSelector from './RuntimeSelector';\n\nfunction App() {\n  const { \n    state,\n    setUser,\n    setGenres,\n    setLaterMovies,\n    removeLaterMovie,\n    setFavoriteMovies,\n    removeFavoritedMovie,\n    setFriends,\n    setGroup\n  } = useApplicationData();\n\n  const user = state.user;\n  const userGenres = state.genres;\n  const friends = state.friends\n  const group = state.group\n\n  const [favList, setFavList] = useState(\"hide\")\n  const [laterList, setLaterList] = useState(\"hide\")\n  const [genreList, setGenreList] = useState(\"hide\")\n  const [friendList, setFriendList] = useState(\"hide\")\n\n  const [recentSuggestions, setRecentSuggestions] = useState([])\n  const [minimumRuntime, setMinimumRuntime] = useState(30)\n  const [maximumRuntime, setMaximumRuntime] = useState(300)\n\n  const useMovieNight = function(friend, action) {\n    if (action === \"add\") {\n      setGroup([\n        ...group, {\n          friend\n        }\n      ])\n    } else if (action === \"remove\") {\n      let newGroup = []\n      for (let each of group) {\n        if (!(friend[\"id\"] === each[\"friend\"][\"id\"])) {\n          newGroup.push(each)\n        }\n      }\n      setGroup(newGroup)\n    }\n  }\n\n  const getRecentSuggestions = function(newSuggestion) {\n    let updatedRecentSuggestionsList = [...recentSuggestions]\n    updatedRecentSuggestionsList.unshift({newSuggestion})\n    if (updatedRecentSuggestionsList.length > 15) {\n      updatedRecentSuggestionsList = updatedRecentSuggestionsList.slice(0, updatedRecentSuggestionsList.length - 1)\n    }\n      setRecentSuggestions(updatedRecentSuggestionsList)\n  }\n\n  const onDragEnd = (result) => {\n    // TODO : update\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId) {\n      if (destination.index === source.index) {\n        return;\n      }\n\n      if (destination.droppableId === \"favorites\") {\n        const new_fav_movies = [...state.favorited_movies]\n        const moved_movie = { ...new_fav_movies[source.index] }\n  \n        new_fav_movies.splice(source.index, 1);\n        new_fav_movies.splice(destination.index, 0, moved_movie)\n\n        setFavoriteMovies(new_fav_movies)\n      } else if (destination.droppableId === \"laters\") {\n        const new_later_movies = [...state.later_movies]\n        const moved_movie = { ...new_later_movies[source.index] }\n\n        new_later_movies.splice(source.index, 1);\n        new_later_movies.splice(destination.index, 0, moved_movie)\n  \n        setLaterMovies(new_later_movies)\n      }\n    } else if (destination.droppableId === \"laters\" && source.droppableId === \"recent\") {\n      const new_later_movies = [...state.later_movies]\n      const sugested_movie = { ...recentSuggestions[destination.index] }\n      const moved_movie = {\n        title: sugested_movie.title,\n        img: sugested_movie.poster,\n      }\n\n      new_later_movies.splice(destination.index, 0, moved_movie)\n\n      console.log(new_later_movies)\n\n      setLaterMovies(new_later_movies)\n    }\n  }\n\n  const createUser = (name, password) => {\n    return axios.post(`http://localhost:5000/signup`, { name, password, genres: userGenres })\n    .then(response => {\n      console.log(\"WEE RES!\", response)\n\n      setUser(response.data.user);\n    })\n  }\n\n  const getUser = (name, password) => {\n    return axios.post(\"http://localhost:5000/login\", { name, password })\n      .then(response => {\n        setUser(response.data.user);\n        setGenres(response.data.genres);\n        setLaterMovies(response.data.later_movies);\n        setFavoriteMovies(response.data.favorited_movies);\n      })\n  }\n\n  const setGenre = (id, value) => {\n    if (state.user && state.user.name !== \"\") {\n      axios.post(`http://localhost:5000/api/${state.user.name}/genres`, { id, preference: value })\n        .then(response => {\n          setGenres(response.data.genres)\n        })\n    } else {\n      const genre = state.genres.find(genre => genre.id === id);\n      genre.preference = value;\n\n      setGenres(state.genres);\n    }\n  }\n\n  const removeUser = () => {\n    setUser(\"\");\n    setGenres([]);\n    setLaterMovies([]);\n    setFavoriteMovies([]);\n    setFriends([]);\n    setGroup([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav user={user} \n        createUser={createUser} \n        getUser={getUser} \n        removeUser={removeUser} \n        setFavList={setFavList} \n        setLaterList={setLaterList}\n        setGenreList={setGenreList}\n        setFriendList={setFriendList}\n        favList={favList}\n        friendList={friendList}\n        laterList={laterList}\n        genreList={genreList}\n      />\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n      <div>\n        {favList === \"show\" &&   \n          <List type=\"favorites\" data={state.favorited_movies} user={user} setFavoriteMovies={setFavoriteMovies} removeLaterMovie={removeFavoritedMovie} /> \n        } \n      </div>\n      <div>\n        {laterList === \"show\" &&\n          <List type=\"laters\" removeLaterMovie={removeLaterMovie} data={state.later_movies} /> \n        }\n      </div>\n\n      <div>\n      {genreList === \"show\" &&\n        <div>\n          <Genres userGenres = {userGenres} setGenre={setGenre} />\n          <RuntimeSelector minimumRuntime={minimumRuntime} setMinimumRuntime={setMinimumRuntime} maximumRuntime={maximumRuntime} setMaximumRuntime={setMaximumRuntime}/>\n        </div>\n      }\n      </div> \n      <div>\n      {friendList === \"show\" &&\n        <FriendList friends={friends} useMovieNight={useMovieNight} group={group} action=\"add\" classname=\"list\" type=\"All Friends\"/>\n      }\n      </div>\n      <div className=\"main-container\">\n        <div className=\"friends-container\">\n          <MovieNightFriends  group={group} action=\"remove\" classname=\"columnlist\" useMovieNight={useMovieNight} />\n        </div>\n        <div className=\"suggested-container\">\n          <Suggested\n            recentSuggestions={recentSuggestions}\n            getRecentSuggestions={getRecentSuggestions}\n            user={user}\n            group={group}\n            userGenres={userGenres}\n            setLaterMovies={setLaterMovies}\n            minimumRuntime={minimumRuntime}\n            maximumRuntime={maximumRuntime}\n          />\n        </div>\n        <div className=\"recent-suggestion-list-container\">\n          RECENTLY SUGGESTED LIST\n          <RecentSuggestion recent={recentSuggestions}/>\n        </div>\n      </div>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}