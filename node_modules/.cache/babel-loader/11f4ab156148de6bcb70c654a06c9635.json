{"ast":null,"code":"import _slicedToArray from \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/Suggested.js\";\nimport \"./Suggested.scss\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // import './App.css';\n\nexport default function Suggested(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        suggestedMovie = _useState2[0],\n        setSuggestedMovie = _useState2[1];\n\n  const _useState3 = useState(\"hide\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        suggested = _useState4[0],\n        setSuggested = _useState4[1];\n\n  const newMovie = () => {\n    setSuggested(\"waiting\");\n    let group;\n\n    if (props.theme) {\n      group = [];\n    } else {\n      group = props.group;\n    }\n\n    axios.post(\"/suggestion\", {\n      userGenrePreferences: props.userGenres,\n      group,\n      recentSuggestions: props.recentSuggestions,\n      minimumRuntime: props.minimumRuntime,\n      maximumRuntime: props.maximumRuntime\n    }).then(response => {\n      setSuggested(\"show\");\n      setSuggestedMovie({\n        \"title\": response.data.title,\n        \"description\": response.data.description,\n        \"poster\": response.data.poster,\n        \"releaseDate\": response.data.release_date,\n        \"tmdbId\": response.data.tmdb_id,\n        \"imdb_link\": response.data.imdb_link,\n        \"runtime\": response.data.runtime,\n        \"error\": response.data.error,\n        \"rating\": response.data.rating\n      });\n      props.getRecentSuggestions(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const saveToLaterList = (userName, suggestedMovie) => {\n    axios.post(\"/api/\".concat(userName, \"/latermovies\"), {\n      suggestedMovie\n    }).then(response => {\n      props.setLaterMovies(response.data.later_movies);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  let runtime;\n\n  if (suggestedMovie.runtime) {\n    runtime = suggestedMovie.runtime + ' minutes';\n  }\n\n  let error = \"\";\n\n  if (suggestedMovie.error === \"group\") {\n    error = \"As a group, you hate all movie genres. To receive a curated movie suggestion, try setting a theme night. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\";\n  } else if (suggestedMovie.error === \"solo\") {\n    error = \"You currently hate all movie genres. Update your preferences to receive a curated movie suggestion. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\";\n  }\n\n  return React.createElement(\"section\", {\n    className: \"suggested-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, suggested === \"hide\" && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Click the Reel to Generate Your First Movie Suggestion\"), React.createElement(\"img\", {\n    src: \"images/roundreel.png\",\n    alt: \"click to generate a suggestion!\",\n    className: \"reel\",\n    onClick: () => {\n      newMovie();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), suggested === \"waiting\" && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Searching for a Movie Match...\"), React.createElement(\"img\", {\n    className: \"spinner\",\n    src: \"images/roundreel.png\",\n    alt: \"spinning film wheel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), suggested === \"show\" && React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"suggestion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, error), React.createElement(\"h2\", {\n    className: \"movie-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, suggestedMovie.title)), React.createElement(\"main\", {\n    className: \"suggestion-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: suggestedMovie.title,\n    src: suggestedMovie.poster,\n    className: \"movie-poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"New Suggestion\"), React.createElement(\"img\", {\n    className: \"next\",\n    src: \"images/roundreel.png\",\n    alt: \"click to generate another suggestion\",\n    onClick: () => newMovie(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, suggestedMovie.releaseDate), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, suggestedMovie.description), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, suggestedMovie.rating), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, runtime), React.createElement(\"a\", {\n    href: suggestedMovie.imdb_link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Learn more at IMDB\")), props.user.name && React.createElement(React.Fragment, null, React.createElement(\"h6\", {\n    className: \"later\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Watch Later\"), React.createElement(\"img\", {\n    className: \"later\",\n    src: \"images/later.png\",\n    alt: \"Add to later\",\n    onClick: () => {\n      saveToLaterList(props.user.name, suggestedMovie);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/Suggested.js"],"names":["React","useState","axios","Suggested","props","suggestedMovie","setSuggestedMovie","suggested","setSuggested","newMovie","group","theme","post","userGenrePreferences","userGenres","recentSuggestions","minimumRuntime","maximumRuntime","then","response","data","title","description","poster","release_date","tmdb_id","imdb_link","runtime","error","rating","getRecentSuggestions","catch","console","log","saveToLaterList","userName","setLaterMovies","later_movies","releaseDate","user","name"],"mappings":"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","sourcesContent":["import \"./Suggested.scss\"\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n// import './App.css';\n\nexport default function Suggested(props) {\n  const [suggestedMovie, setSuggestedMovie] = useState(\"\");\n  const [suggested, setSuggested] = useState(\"hide\")\n\n  const newMovie = () => {\n    setSuggested(\"waiting\")\n    let group;\n    if (props.theme) {\n      group = [];\n    } else {\n      group = props.group;\n    }\n    axios.post(`/suggestion`, { userGenrePreferences: props.userGenres, group, recentSuggestions: props.recentSuggestions, minimumRuntime: props.minimumRuntime, maximumRuntime: props.maximumRuntime })\n      .then(response => {\n        setSuggested(\"show\")\n        setSuggestedMovie({\n          \"title\": response.data.title,\n          \"description\": response.data.description,\n          \"poster\": response.data.poster,\n          \"releaseDate\": response.data.release_date,\n          \"tmdbId\": response.data.tmdb_id,\n          \"imdb_link\": response.data.imdb_link,\n          \"runtime\" : response.data.runtime,\n          \"error\": response.data.error,\n          \"rating\": response.data.rating\n        });\n        props.getRecentSuggestions(response.data);\n      })\n      .catch(error => {console.log(error)})\n  };\n\n  const saveToLaterList = (userName, suggestedMovie) => {\n    axios.post(`/api/${userName}/latermovies`, { suggestedMovie })\n    .then(response => {\n      props.setLaterMovies(response.data.later_movies)\n    })\n    .catch(error => {console.log(error)})\n  };\n\n  let runtime;\n\n  if (suggestedMovie.runtime) {\n    runtime = suggestedMovie.runtime + ' minutes'\n  }\n\n  let error = \"\"\n  if(suggestedMovie.error === \"group\") {\n    error = \"As a group, you hate all movie genres. To receive a curated movie suggestion, try setting a theme night. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\"\n  } else if(suggestedMovie.error === \"solo\") {\n    error = \"You currently hate all movie genres. Update your preferences to receive a curated movie suggestion. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\"\n  }\n\n  return (\n    <section className=\"suggested-container\">\n      {suggested === \"hide\" &&\n        <>\n          <h1>Click the Reel to Generate Your First Movie Suggestion</h1>\n          <img src=\"images/roundreel.png\" alt=\"click to generate a suggestion!\" className=\"reel\" onClick={() => {newMovie()}}/>\n        </>\n      }\n      {suggested === \"waiting\" &&\n      <>\n        <h1>Searching for a Movie Match...</h1>\n        <img className=\"spinner\" src=\"images/roundreel.png\" alt=\"spinning film wheel\"/>\n      </>\n      }\n      {suggested === \"show\" && \n        <>\n          <section className=\"suggestion\">\n            <header>\n              <h5>{error}</h5>\n              <h2 className=\"movie-title\">{suggestedMovie.title}</h2>\n            </header>\n            <main className=\"suggestion-info\">\n              <img alt={suggestedMovie.title} src={suggestedMovie.poster} className=\"movie-poster\"></img>\n              <article>\n                <h6 className=\"next\">New Suggestion</h6>\n                <img className=\"next\" src=\"images/roundreel.png\" alt=\"click to generate another suggestion\" onClick={()=>newMovie()}></img>\n                <h4>{suggestedMovie.releaseDate}</h4>\n                <p>{suggestedMovie.description}</p>\n                <span>{suggestedMovie.rating}</span>\n                <span>{runtime}</span>\n                <a href={suggestedMovie.imdb_link} target=\"_blank\" rel=\"noopener noreferrer\"><b>Learn more at IMDB</b></a>\n                {props.user.name && <><h6 className=\"later\">Watch Later</h6><img className=\"later\" src=\"images/later.png\" alt=\"Add to later\" onClick={()=>{saveToLaterList(props.user.name, suggestedMovie)}}></img></>}\n              </article>\n            </main>\n          </section>\n        </>\n      }\n    </section>\n  );\n}"]},"metadata":{},"sourceType":"module"}