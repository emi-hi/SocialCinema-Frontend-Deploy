{"ast":null,"code":"import _slicedToArray from \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport List from './lists/List.js';\nimport Nav from './Nav';\nimport Suggested from \"./Suggested\";\nimport Genres from \"./Genres\";\nimport FriendList from './FriendList';\nimport MovieNightFriends from './MovieNightFriends';\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport RecentSuggestion from './Recent';\nconst tempFaves = [{\n  id: 1,\n  title: 'Titanic',\n  img: 'images/movies/titanic.jpg'\n}, {\n  id: 2,\n  title: 'Scary Movie',\n  img: 'images/movies/scary.jpg'\n}, {\n  id: 3,\n  title: 'Jaws',\n  img: 'images/movies/jaws.jpg'\n}, {\n  id: 4,\n  title: 'Baby Driver',\n  img: 'images/movies/baby.jpeg'\n}];\n\nfunction App() {\n  const _useApplicationData = useApplicationData(),\n        state = _useApplicationData.state,\n        setUser = _useApplicationData.setUser,\n        setGenres = _useApplicationData.setGenres,\n        setLaterMovies = _useApplicationData.setLaterMovies,\n        setFavoriteMovies = _useApplicationData.setFavoriteMovies,\n        setFriends = _useApplicationData.setFriends,\n        setGroup = _useApplicationData.setGroup;\n\n  const user = state.user;\n  const userGenres = state.genres;\n  const friends = state.friends;\n  const group = state.group;\n\n  const _useState = useState(\"hide\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        favList = _useState2[0],\n        setFavList = _useState2[1];\n\n  const _useState3 = useState(\"hide\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        laterList = _useState4[0],\n        setLaterList = _useState4[1];\n\n  const _useState5 = useState(\"hide\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        genreList = _useState6[0],\n        setGenreList = _useState6[1];\n\n  const _useState7 = useState(\"hide\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        friendList = _useState8[0],\n        setFriendList = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        recentSuggestions = _useState10[0],\n        setRecentSuggestions = _useState10[1];\n\n  const useMovieNight = function (friend, action) {\n    if (action === \"add\") {\n      setGroup([...group, {\n        friend\n      }]);\n    } else if (action === \"remove\") {\n      let newGroup = [];\n\n      for (let each of group) {\n        if (!(friend[\"id\"] === each[\"friend\"][\"id\"])) {\n          newGroup.push(each);\n        }\n      }\n\n      setGroup(newGroup);\n    }\n  };\n\n  const getRecentSuggestions = function (newSuggestion) {\n    let updatedRecentSuggestionsList = [...recentSuggestions];\n    updatedRecentSuggestionsList.push({\n      newSuggestion\n    });\n\n    if (updatedRecentSuggestionsList.length > 10) {\n      updatedRecentSuggestionsList = updatedRecentSuggestionsList.slice(1);\n    }\n\n    setRecentSuggestions(updatedRecentSuggestionsList);\n  };\n\n  const toggleList = function (status) {\n    if (status === \"show\") {\n      return \"hide\";\n    } else {\n      return \"show\";\n    }\n  };\n\n  const getUser = name => {\n    axios.post(\"http://localhost:5000/login\", {\n      name,\n      genres: userGenres\n    }).then(response => {\n      setUser(response.data.user);\n      setGenres(response.data.genres);\n      setLaterMovies(response.data.later_movies);\n    });\n  };\n\n  const setGenre = (id, value) => {\n    if (state.user && state.user.name !== \"\") {\n      axios.post(\"http://localhost:5000/api/\".concat(state.user.name, \"/genres\"), {\n        id,\n        preference: value\n      }).then(response => {\n        setGenres(response.data.genres);\n      });\n    } else {\n      const genre = state.genres.find(genre => genre.id === id);\n      genre.preference = value;\n      setGenres(state.genres);\n    }\n  };\n\n  const removeUser = () => {\n    setUser(\"\");\n    setGenres([]);\n    setLaterMovies([]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    user: user,\n    getUser: getUser,\n    removeUser: removeUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"list_name\",\n    onClick: () => setFavList(toggleList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Favorite Movies\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, favList === \"show\" && React.createElement(List, {\n    type: \"favorites\",\n    data: tempFaves,\n    setFavoriteMovies: setFavoriteMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list_name\",\n    onClick: () => setLaterList(toggleList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Later Movies\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, laterList === \"show\" && React.createElement(List, {\n    type: \"laters\",\n    data: state.later_movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list_name\",\n    onClick: () => setGenreList(toggleList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"My Genre Preferences\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, genreList === \"show\" && React.createElement(Genres, {\n    userGenres: userGenres,\n    setGenre: setGenre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list_name\",\n    onClick: () => setFriendList(toggleList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"My Friends\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, friendList === \"show\" && React.createElement(FriendList, {\n    friends: friends,\n    useMovieNight: useMovieNight,\n    group: group,\n    action: \"add\",\n    classname: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"friends-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"FRIENDS FOR MOVIE NIGHT!\", React.createElement(MovieNightFriends, {\n    user: user,\n    group: group,\n    action: \"remove\",\n    classname: \"columnlist\",\n    useMovieNight: useMovieNight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"suggested-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Suggested, {\n    getRecentSuggestions: getRecentSuggestions,\n    user: user,\n    setLaterMovies: setLaterMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"recent-suggestion-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"RECENTLY SUGGESTED LIST\", React.createElement(RecentSuggestion, {\n    recent: recentSuggestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/App.js"],"names":["React","useState","axios","List","Nav","Suggested","Genres","FriendList","MovieNightFriends","useApplicationData","RecentSuggestion","tempFaves","id","title","img","App","state","setUser","setGenres","setLaterMovies","setFavoriteMovies","setFriends","setGroup","user","userGenres","genres","friends","group","favList","setFavList","laterList","setLaterList","genreList","setGenreList","friendList","setFriendList","recentSuggestions","setRecentSuggestions","useMovieNight","friend","action","newGroup","each","push","getRecentSuggestions","newSuggestion","updatedRecentSuggestionsList","length","slice","toggleList","status","getUser","name","post","then","response","data","later_movies","setGenre","value","preference","genre","find","removeUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport List from './lists/List.js'\nimport Nav from './Nav'\n\nimport Suggested from \"./Suggested\";\nimport Genres from \"./Genres\";\nimport FriendList from './FriendList';\nimport MovieNightFriends from './MovieNightFriends';\n\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport RecentSuggestion from './Recent';\n\nconst tempFaves = [\n  {id: 1, title: 'Titanic', img: 'images/movies/titanic.jpg' },\n  {id: 2, title: 'Scary Movie', img: 'images/movies/scary.jpg' },\n  {id: 3, title: 'Jaws', img: 'images/movies/jaws.jpg'},\n  {id: 4, title: 'Baby Driver', img: 'images/movies/baby.jpeg' }\n]\n\nfunction App() {\n  const { state, setUser, setGenres, setLaterMovies, setFavoriteMovies, setFriends, setGroup } = useApplicationData();\n\n  const user = state.user;\n  const userGenres = state.genres;\n  const friends = state.friends\n  const group = state.group\n\n  const [favList, setFavList] = useState(\"hide\")\n  const [laterList, setLaterList] = useState(\"hide\")\n  const [genreList, setGenreList] = useState(\"hide\")\n  const [friendList, setFriendList] = useState(\"hide\")\n  const [recentSuggestions, setRecentSuggestions] = useState([])\n\n  const useMovieNight = function(friend, action) {\n    if (action === \"add\") {\n      setGroup([\n        ...group, {\n          friend\n        }\n      ])\n    } else if (action === \"remove\") {\n      let newGroup = []\n      for (let each of group) {\n        if (!(friend[\"id\"] === each[\"friend\"][\"id\"])) {\n          newGroup.push(each)\n        }\n      }\n      setGroup(newGroup)\n    }\n  }\n\n  const getRecentSuggestions = function(newSuggestion) {\n    let updatedRecentSuggestionsList = [...recentSuggestions]\n    updatedRecentSuggestionsList.push({newSuggestion})\n    if (updatedRecentSuggestionsList.length > 10) {\n      updatedRecentSuggestionsList = updatedRecentSuggestionsList.slice(1)\n    }\n      setRecentSuggestions(updatedRecentSuggestionsList)\n  }\n\n  const toggleList = function(status) {\n    if (status === \"show\") {\n      return \"hide\" \n    } else {\n      return \"show\"\n    }\n  }\n\n  const getUser = (name) => {\n    axios.post(\"http://localhost:5000/login\", { name, genres: userGenres })\n      .then(response => {\n        setUser(response.data.user);\n        setGenres(response.data.genres);\n        setLaterMovies(response.data.later_movies);\n      })\n  }\n\n  const setGenre = (id, value) => {\n    if (state.user && state.user.name !== \"\") {\n      axios.post(`http://localhost:5000/api/${state.user.name}/genres`, { id, preference: value })\n        .then(response => {\n          setGenres(response.data.genres)\n        })\n    } else {\n      const genre = state.genres.find(genre => genre.id === id);\n      genre.preference = value;\n\n      setGenres(state.genres);\n    }\n  }\n\n  const removeUser = () => {\n    setUser(\"\");\n    setGenres([]);\n    setLaterMovies([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav user={user} getUser={getUser} removeUser={removeUser} />\n      <div className=\"list_name\" onClick={() => setFavList(toggleList)}>\n        Favorite Movies\n      </div>\n      <div>\n        {favList === \"show\" &&\n        <List type=\"favorites\" data={tempFaves} setFavoriteMovies={setFavoriteMovies}/> \n        }\n      </div>\n      <div className=\"list_name\" onClick={() => setLaterList(toggleList)}>\n        Later Movies\n      </div>\n      <div>\n        {laterList === \"show\" &&\n        <List type=\"laters\" data={state.later_movies}/> \n        }\n      </div>\n      <div className=\"list_name\" onClick={() => setGenreList(toggleList)}>\n        My Genre Preferences\n      </div>\n      <div>\n      {genreList === \"show\" &&\n        <Genres userGenres = {userGenres} setGenre={setGenre} />\n      }\n      </div> \n      <div className=\"list_name\" onClick={() => setFriendList(toggleList)}>\n        My Friends\n      </div>\n      <div>\n      {friendList === \"show\" &&\n        <FriendList friends={friends} useMovieNight={useMovieNight} group={group} action=\"add\" classname=\"list\"/>\n      }\n      </div>\n      <div className=\"main-container\">\n        <div className=\"friends-container\">\n          FRIENDS FOR MOVIE NIGHT!\n          <MovieNightFriends  user={user} group={group} action=\"remove\" classname=\"columnlist\" useMovieNight={useMovieNight}/>\n        </div>\n        <div className=\"suggested-container\">\n          <Suggested getRecentSuggestions={getRecentSuggestions} user={user} setLaterMovies = {setLaterMovies}/>\n        </div>\n        <div className=\"recent-suggestion-list-container\">\n          RECENTLY SUGGESTED LIST\n          <RecentSuggestion recent={recentSuggestions}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}