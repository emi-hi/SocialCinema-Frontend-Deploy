{"ast":null,"code":"var _jsxFileName = \"/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/Suggested.js\";\nimport \"./Suggested.scss\";\nimport React from \"react\";\nimport axios from \"axios\"; // import './App.css';\n\nexport default function Suggested(props) {\n  // const [suggested, setSuggested] = useState(\"hide\")\n  const newMovie = () => {\n    props.setSuggested(\"waiting\");\n    let group;\n\n    if (props.theme) {\n      group = [];\n    } else {\n      group = props.group;\n    }\n\n    axios.post(\"/suggestion\", {\n      userGenrePreferences: props.userGenres,\n      group,\n      recentSuggestions: props.recentSuggestions\n    }).then(response => {\n      props.setSuggested(\"show\");\n      props.setSuggestedMovie({\n        \"title\": response.data.title,\n        \"description\": response.data.description,\n        \"poster\": response.data.poster,\n        \"releaseDate\": response.data.release_date,\n        \"tmdbId\": response.data.tmdb_id,\n        \"imdb_link\": response.data.imdb_link,\n        \"runtime\": response.data.runtime,\n        \"error\": response.data.error,\n        \"rating\": response.data.rating\n      });\n      props.getRecentSuggestions(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const saveToLaterList = (userName, suggestedMovie) => {\n    axios.post(\"/api/\".concat(userName, \"/latermovies\"), {\n      suggestedMovie\n    }).then(response => {\n      props.setLaterMovies(response.data.later_movies);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  let runtime;\n\n  if (props.suggestedMovie.runtime) {\n    runtime = props.suggestedMovie.runtime + ' minutes';\n  }\n\n  let error = \"\";\n\n  if (props.suggestedMovie.error === \"group\") {\n    error = \"As a group, you hate all movie genres. To receive a curated movie suggestion, try setting a theme night. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\";\n  } else if (props.suggestedMovie.error === \"solo\") {\n    error = \"You currently hate all movie genres. Update your preferences to receive a curated movie suggestion. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\";\n  }\n\n  return React.createElement(\"section\", {\n    className: \"suggested-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.suggested === \"hide\" && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Click the Reel to Generate Your First Movie Suggestion\"), React.createElement(\"img\", {\n    src: \"images/roundreel.png\",\n    alt: \"click to generate a suggestion!\",\n    className: \"reel\",\n    onClick: () => {\n      newMovie();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), props.suggested === \"waiting\" && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Searching for a Movie Match...\"), React.createElement(\"img\", {\n    className: \"spinner\",\n    src: \"images/roundreel.png\",\n    alt: \"spinning film wheel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), props.suggested === \"show\" && React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"suggestion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, error && React.createElement(\"h5\", {\n    className: \"suggestion-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, error), React.createElement(\"h2\", {\n    className: \"movie-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.suggestedMovie.title)), React.createElement(\"main\", {\n    className: \"suggestion-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: props.suggestedMovie.title,\n    src: props.suggestedMovie.poster,\n    className: \"movie-poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"New Suggestion\"), React.createElement(\"img\", {\n    className: \"next\",\n    src: \"images/roundreel.png\",\n    alt: \"click to generate another suggestion\",\n    onClick: () => newMovie(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, props.suggestedMovie.releaseDate), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.suggestedMovie.description), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.suggestedMovie.rating), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, runtime), React.createElement(\"a\", {\n    href: props.suggestedMovie.imdb_link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Learn more at IMDB\")), props.user.name && React.createElement(React.Fragment, null, React.createElement(\"h6\", {\n    className: \"later\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Watch Later\"), React.createElement(\"img\", {\n    className: \"later\",\n    src: \"images/later.png\",\n    alt: \"Add to later\",\n    onClick: () => {\n      saveToLaterList(props.user.name, props.suggestedMovie);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/Users/Emily/lighthouse/finalProject/cinema/social-cinema/src/components/Suggested.js"],"names":["React","axios","Suggested","props","newMovie","setSuggested","group","theme","post","userGenrePreferences","userGenres","recentSuggestions","then","response","setSuggestedMovie","data","title","description","poster","release_date","tmdb_id","imdb_link","runtime","error","rating","getRecentSuggestions","catch","console","log","saveToLaterList","userName","suggestedMovie","setLaterMovies","later_movies","suggested","releaseDate","user","name"],"mappings":";AAAA,OAAO,kBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBD,IAAAA,KAAK,CAACE,YAAN,CAAmB,SAAnB;AACA,QAAIC,KAAJ;;AACA,QAAIH,KAAK,CAACI,KAAV,EAAiB;AACfD,MAAAA,KAAK,GAAG,EAAR;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,GAAGH,KAAK,CAACG,KAAd;AACD;;AACDL,IAAAA,KAAK,CAACO,IAAN,gBAA0B;AAAEC,MAAAA,oBAAoB,EAAEN,KAAK,CAACO,UAA9B;AAA0CJ,MAAAA,KAA1C;AAAiDK,MAAAA,iBAAiB,EAAER,KAAK,CAACQ;AAA1E,KAA1B,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBV,MAAAA,KAAK,CAACE,YAAN,CAAmB,MAAnB;AACAF,MAAAA,KAAK,CAACW,iBAAN,CAAwB;AACtB,iBAASD,QAAQ,CAACE,IAAT,CAAcC,KADD;AAEtB,uBAAeH,QAAQ,CAACE,IAAT,CAAcE,WAFP;AAGtB,kBAAUJ,QAAQ,CAACE,IAAT,CAAcG,MAHF;AAItB,uBAAeL,QAAQ,CAACE,IAAT,CAAcI,YAJP;AAKtB,kBAAUN,QAAQ,CAACE,IAAT,CAAcK,OALF;AAMtB,qBAAaP,QAAQ,CAACE,IAAT,CAAcM,SANL;AAOtB,mBAAYR,QAAQ,CAACE,IAAT,CAAcO,OAPJ;AAQtB,iBAAST,QAAQ,CAACE,IAAT,CAAcQ,KARD;AAStB,kBAAUV,QAAQ,CAACE,IAAT,CAAcS;AATF,OAAxB;AAWArB,MAAAA,KAAK,CAACsB,oBAAN,CAA2BZ,QAAQ,CAACE,IAApC;AACD,KAfH,EAgBGW,KAhBH,CAgBSH,KAAK,IAAI;AAACI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAAmB,KAhBtC;AAiBD,GAzBD;;AA2BA,QAAMM,eAAe,GAAG,CAACC,QAAD,EAAWC,cAAX,KAA8B;AACpD9B,IAAAA,KAAK,CAACO,IAAN,gBAAmBsB,QAAnB,mBAA2C;AAAEC,MAAAA;AAAF,KAA3C,EACCnB,IADD,CACMC,QAAQ,IAAI;AAChBV,MAAAA,KAAK,CAAC6B,cAAN,CAAqBnB,QAAQ,CAACE,IAAT,CAAckB,YAAnC;AACD,KAHD,EAICP,KAJD,CAIOH,KAAK,IAAI;AAACI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAAmB,KAJpC;AAKD,GAND;;AAQA,MAAID,OAAJ;;AAEA,MAAInB,KAAK,CAAC4B,cAAN,CAAqBT,OAAzB,EAAkC;AAChCA,IAAAA,OAAO,GAAGnB,KAAK,CAAC4B,cAAN,CAAqBT,OAArB,GAA+B,UAAzC;AACD;;AAED,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAGpB,KAAK,CAAC4B,cAAN,CAAqBR,KAArB,KAA+B,OAAlC,EAA2C;AACzCA,IAAAA,KAAK,GAAG,2KAAR;AACD,GAFD,MAEO,IAAGpB,KAAK,CAAC4B,cAAN,CAAqBR,KAArB,KAA+B,MAAlC,EAA0C;AAC/CA,IAAAA,KAAK,GAAG,sKAAR;AACD;;AAED,SACE;AAAS,IAAA,SAAS,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,KAAK,CAAC+B,SAAN,KAAoB,MAApB,IACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,EAEE;AAAK,IAAA,GAAG,EAAC,sBAAT;AAAgC,IAAA,GAAG,EAAC,iCAApC;AAAsE,IAAA,SAAS,EAAC,MAAhF;AAAuF,IAAA,OAAO,EAAE,MAAM;AAAC9B,MAAAA,QAAQ;AAAG,KAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAOGD,KAAK,CAAC+B,SAAN,KAAoB,SAApB,IACD,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAC,sBAA7B;AAAoD,IAAA,GAAG,EAAC,qBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,EAaG/B,KAAK,CAAC+B,SAAN,KAAoB,MAApB,IACC,0CACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,IAAI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,KAAlC,CADZ,EAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BpB,KAAK,CAAC4B,cAAN,CAAqBf,KAAlD,CAFF,CADF,EAKE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEb,KAAK,CAAC4B,cAAN,CAAqBf,KAA/B;AAAsC,IAAA,GAAG,EAAEb,KAAK,CAAC4B,cAAN,CAAqBb,MAAhE;AAAwE,IAAA,SAAS,EAAC,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAC,sBAA1B;AAAiD,IAAA,GAAG,EAAC,sCAArD;AAA4F,IAAA,OAAO,EAAE,MAAId,QAAQ,EAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAAC4B,cAAN,CAAqBI,WAA1B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhC,KAAK,CAAC4B,cAAN,CAAqBd,WAAzB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOd,KAAK,CAAC4B,cAAN,CAAqBP,MAA5B,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,OAAP,CANF,EAOE;AAAG,IAAA,IAAI,EAAEnB,KAAK,CAAC4B,cAAN,CAAqBV,SAA9B;AAAyC,IAAA,MAAM,EAAC,QAAhD;AAAyD,IAAA,GAAG,EAAC,qBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAnF,CAPF,EAQGlB,KAAK,CAACiC,IAAN,CAAWC,IAAX,IAAmB,0CAAE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAF,EAAwC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAC,kBAA3B;AAA8C,IAAA,GAAG,EAAC,cAAlD;AAAiE,IAAA,OAAO,EAAE,MAAI;AAACR,MAAAA,eAAe,CAAC1B,KAAK,CAACiC,IAAN,CAAWC,IAAZ,EAAkBlC,KAAK,CAAC4B,cAAxB,CAAf;AAAuD,KAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,CARtB,CAFF,CALF,CADF,CAdJ,CADF;AAuCD","sourcesContent":["import \"./Suggested.scss\"\n\nimport React from \"react\";\nimport axios from \"axios\";\n// import './App.css';\n\nexport default function Suggested(props) {\n  // const [suggested, setSuggested] = useState(\"hide\")\n\n  const newMovie = () => {\n    props.setSuggested(\"waiting\")\n    let group;\n    if (props.theme) {\n      group = [];\n    } else {\n      group = props.group;\n    }\n    axios.post(`/suggestion`, { userGenrePreferences: props.userGenres, group, recentSuggestions: props.recentSuggestions})\n      .then(response => {\n        props.setSuggested(\"show\")\n        props.setSuggestedMovie({\n          \"title\": response.data.title,\n          \"description\": response.data.description,\n          \"poster\": response.data.poster,\n          \"releaseDate\": response.data.release_date,\n          \"tmdbId\": response.data.tmdb_id,\n          \"imdb_link\": response.data.imdb_link,\n          \"runtime\" : response.data.runtime,\n          \"error\": response.data.error,\n          \"rating\": response.data.rating\n        });\n        props.getRecentSuggestions(response.data);\n      })\n      .catch(error => {console.log(error)})\n  };\n\n  const saveToLaterList = (userName, suggestedMovie) => {\n    axios.post(`/api/${userName}/latermovies`, { suggestedMovie })\n    .then(response => {\n      props.setLaterMovies(response.data.later_movies)\n    })\n    .catch(error => {console.log(error)})\n  };\n\n  let runtime;\n\n  if (props.suggestedMovie.runtime) {\n    runtime = props.suggestedMovie.runtime + ' minutes'\n  }\n\n  let error = \"\"\n  if(props.suggestedMovie.error === \"group\") {\n    error = \"As a group, you hate all movie genres. To receive a curated movie suggestion, try setting a theme night. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\"\n  } else if(props.suggestedMovie.error === \"solo\") {\n    error = \"You currently hate all movie genres. Update your preferences to receive a curated movie suggestion. Otherwise, we suggest you watch Bob Ross! No one hates Bob Ross.\"\n  }\n\n  return (\n    <section className=\"suggested-container\">\n      {props.suggested === \"hide\" &&\n        <>\n          <h1>Click the Reel to Generate Your First Movie Suggestion</h1>\n          <img src=\"images/roundreel.png\" alt=\"click to generate a suggestion!\" className=\"reel\" onClick={() => {newMovie()}}/>\n        </>\n      }\n      {props.suggested === \"waiting\" &&\n      <>\n        <h1>Searching for a Movie Match...</h1>\n        <img className=\"spinner\" src=\"images/roundreel.png\" alt=\"spinning film wheel\"/>\n      </>\n      }\n      {props.suggested === \"show\" && \n        <>\n          <section className=\"suggestion\">\n            <header>\n              {error && <h5 className=\"suggestion-error\">{error}</h5>}\n              <h2 className=\"movie-title\">{props.suggestedMovie.title}</h2>\n            </header>\n            <main className=\"suggestion-info\">\n              <img alt={props.suggestedMovie.title} src={props.suggestedMovie.poster} className=\"movie-poster\"></img>\n              <article>\n                <h6 className=\"next\">New Suggestion</h6>\n                <img className=\"next\" src=\"images/roundreel.png\" alt=\"click to generate another suggestion\" onClick={()=>newMovie()}></img>\n                <h4>{props.suggestedMovie.releaseDate}</h4>\n                <p>{props.suggestedMovie.description}</p>\n                <span>{props.suggestedMovie.rating}</span>\n                <span>{runtime}</span>\n                <a href={props.suggestedMovie.imdb_link} target=\"_blank\" rel=\"noopener noreferrer\"><b>Learn more at IMDB</b></a>\n                {props.user.name && <><h6 className=\"later\">Watch Later</h6><img className=\"later\" src=\"images/later.png\" alt=\"Add to later\" onClick={()=>{saveToLaterList(props.user.name, props.suggestedMovie)}}></img></>}\n              </article>\n            </main>\n          </section>\n        </>\n      }\n    </section>\n  );\n}"]},"metadata":{},"sourceType":"module"}